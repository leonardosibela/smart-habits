package com.hikarisource.smarthabits.util

import com.hikarisource.smarthabits.data.entity.DailyHabitEntity
import com.hikarisource.smarthabits.data.entity.HabitCounterEntity
import com.hikarisource.smarthabits.data.entity.HabitEntity
import com.hikarisource.smarthabits.data.entity.MonthlyHabitEntity
import com.hikarisource.smarthabits.data.entity.PeriodicityEntity
import com.hikarisource.smarthabits.data.entity.WeeklyHabitEntity
import com.hikarisource.smarthabits.data.entity.YearlyHabitEntity
import com.hikarisource.smarthabits.domain.model.DailyHabit
import com.hikarisource.smarthabits.domain.model.Habit
import com.hikarisource.smarthabits.domain.model.HabitCounter
import com.hikarisource.smarthabits.domain.model.MonthlyHabit
import com.hikarisource.smarthabits.domain.model.Periodicity
import com.hikarisource.smarthabits.domain.model.WeeklyHabit
import com.hikarisource.smarthabits.domain.model.YearlyHabit
import io.mockk.MockKAnnotations

object TestData {
    const val FIRST_ID = 1
    private const val SECOND_ID = 2

    const val BLANK_DESCRIPTION = ""
    const val FIRST_DESCRIPTION = "Description one"
    const val SECOND_DESCRIPTION = "Description two"
    const val FIRST_COMPLETED = true
    const val SECOND_COMPLETED = false
    const val FIRST_PERIOD = 1
    const val SECOND_PERIOD = 2

    val DAILY_PERIODICITY = Periodicity.DAILY
    val WEEKLY_PERIODICITY = Periodicity.WEEKLY
    val MONTHLY_PERIODICITY = Periodicity.MONTHLY
    val YEARLY_PERIODICITY = Periodicity.YEARLY

    val DAILY_PERIODICITY_ENTITY = PeriodicityEntity.DAILY
    val WEEKLY_PERIODICITY_ENTITY = PeriodicityEntity.WEEKLY
    val MONTHLY_PERIODICITY_ENTITY = PeriodicityEntity.MONTHLY
    val YEARLY_PERIODICITY_ENTITY = PeriodicityEntity.YEARLY

    const val DAILY_PERIODICITY_AS_STRING = "DAILY"
    const val WEEKLY_PERIODICITY_AS_STRING = "WEEKLY"
    const val MONTHLY_PERIODICITY_AS_STRING = "MONTHLY"
    const val YEARLY_PERIODICITY_AS_STRING = "YEARLY"

    val FIRST_HABIT_DAILY = Habit(FIRST_ID, FIRST_DESCRIPTION, DAILY_PERIODICITY)

    val SECOND_HABIT_DAILY = Habit(SECOND_ID, SECOND_DESCRIPTION, DAILY_PERIODICITY)
    val FIRST_HABIT_DAILY_ENTITY =
        HabitEntity(FIRST_ID, FIRST_DESCRIPTION, DAILY_PERIODICITY_ENTITY)
    val SECOND_HABIT_DAILY_ENTITY =
        HabitEntity(SECOND_ID, SECOND_DESCRIPTION, WEEKLY_PERIODICITY_ENTITY)

    val FIRST_HABIT_WEEKLY = Habit(FIRST_ID, FIRST_DESCRIPTION, WEEKLY_PERIODICITY)
    val SECOND_HABIT_WEEKLY = Habit(SECOND_ID, SECOND_DESCRIPTION, WEEKLY_PERIODICITY)
    val FIRST_HABIT_WEEKLY_ENTITY =
        HabitEntity(FIRST_ID, FIRST_DESCRIPTION, WEEKLY_PERIODICITY_ENTITY)
    val SECOND_HABIT_WEEKLY_ENTITY =
        HabitEntity(SECOND_ID, SECOND_DESCRIPTION, WEEKLY_PERIODICITY_ENTITY)

    val FIRST_HABIT_MONTHLY = Habit(FIRST_ID, FIRST_DESCRIPTION, MONTHLY_PERIODICITY)
    val SECOND_HABIT_MONTHLY = Habit(SECOND_ID, SECOND_DESCRIPTION, MONTHLY_PERIODICITY)
    val FIRST_HABIT_MONTHLY_ENTITY =
        HabitEntity(FIRST_ID, FIRST_DESCRIPTION, MONTHLY_PERIODICITY_ENTITY)
    val SECOND_HABIT_MONTHLY_ENTITY =
        HabitEntity(SECOND_ID, SECOND_DESCRIPTION, MONTHLY_PERIODICITY_ENTITY)

    val FIRST_HABIT_YEARLY = Habit(FIRST_ID, FIRST_DESCRIPTION, YEARLY_PERIODICITY)
    val SECOND_HABIT_YEARLY = Habit(SECOND_ID, SECOND_DESCRIPTION, YEARLY_PERIODICITY)
    val FIRST_HABIT_YEARLY_ENTITY =
        HabitEntity(FIRST_ID, FIRST_DESCRIPTION, YEARLY_PERIODICITY_ENTITY)
    val SECOND_HABIT_YEARLY_ENTITY =
        HabitEntity(SECOND_ID, SECOND_DESCRIPTION, YEARLY_PERIODICITY_ENTITY)

    val HABIT_DAILY = Habit(FIRST_ID, FIRST_DESCRIPTION, Periodicity.DAILY)
    val HABIT_WEEKLY = Habit(FIRST_ID, FIRST_DESCRIPTION, Periodicity.WEEKLY)
    val HABIT_MONTHLY = Habit(FIRST_ID, FIRST_DESCRIPTION, Periodicity.MONTHLY)
    val HABIT_YEARLY = Habit(FIRST_ID, FIRST_DESCRIPTION, Periodicity.YEARLY)

    val FIRST_DAILY_HABIT = DailyHabit(FIRST_ID, FIRST_DESCRIPTION, FIRST_COMPLETED, FIRST_PERIOD)
    val SECOND_DAILY_HABIT =
        DailyHabit(SECOND_ID, SECOND_DESCRIPTION, SECOND_COMPLETED, SECOND_PERIOD)

    val FIRST_WEEKLY_HABIT = WeeklyHabit(FIRST_ID, FIRST_DESCRIPTION, FIRST_COMPLETED, FIRST_PERIOD)
    val SECOND_WEEKLY_HABIT =
        WeeklyHabit(SECOND_ID, SECOND_DESCRIPTION, SECOND_COMPLETED, SECOND_PERIOD)

    val FIRST_MONTHLY_HABIT =
        MonthlyHabit(FIRST_ID, FIRST_DESCRIPTION, FIRST_COMPLETED, FIRST_PERIOD)
    val SECOND_MONTHLY_HABIT =
        MonthlyHabit(SECOND_ID, SECOND_DESCRIPTION, SECOND_COMPLETED, SECOND_PERIOD)

    val FIRST_YEARLY_HABIT = YearlyHabit(FIRST_ID, FIRST_DESCRIPTION, FIRST_COMPLETED, FIRST_PERIOD)
    val SECOND_YEARLY_HABIT =
        YearlyHabit(SECOND_ID, SECOND_DESCRIPTION, SECOND_COMPLETED, SECOND_PERIOD)

    val FIRST_DAILY_HABIT_ENTITY =
        DailyHabitEntity(FIRST_ID, FIRST_DESCRIPTION, FIRST_COMPLETED, FIRST_PERIOD)

    val SECOND_DAILY_HABIT_ENTITY =
        DailyHabitEntity(SECOND_ID, SECOND_DESCRIPTION, SECOND_COMPLETED, SECOND_PERIOD)

    val FIRST_WEEKLY_HABIT_ENTITY =
        WeeklyHabitEntity(FIRST_ID, FIRST_DESCRIPTION, FIRST_COMPLETED, FIRST_PERIOD)

    val SECOND_WEEKLY_HABIT_ENTITY =
        WeeklyHabitEntity(SECOND_ID, SECOND_DESCRIPTION, SECOND_COMPLETED, SECOND_PERIOD)

    val FIRST_MONTHLY_HABIT_ENTITY =
        MonthlyHabitEntity(FIRST_ID, FIRST_DESCRIPTION, FIRST_COMPLETED, FIRST_PERIOD)

    val SECOND_MONTHLY_HABIT_ENTITY =
        MonthlyHabitEntity(SECOND_ID, SECOND_DESCRIPTION, SECOND_COMPLETED, SECOND_PERIOD)

    val FIRST_YEARLY_HABIT_ENTITY =
        YearlyHabitEntity(FIRST_ID, FIRST_DESCRIPTION, FIRST_COMPLETED, FIRST_PERIOD)
    val SECOND_YEARLY_HABIT_ENTITY =
        YearlyHabitEntity(SECOND_ID, SECOND_DESCRIPTION, SECOND_COMPLETED, SECOND_PERIOD)

    val HABIT_COUNTER_DAILY = HabitCounter(FIRST_ID, DAILY_PERIODICITY, FIRST_PERIOD)
    val HABIT_COUNTER_WEEKLY = HabitCounter(FIRST_ID, WEEKLY_PERIODICITY, FIRST_PERIOD)
    val HABIT_COUNTER_MONTHLY = HabitCounter(FIRST_ID, MONTHLY_PERIODICITY, FIRST_PERIOD)
    val HABIT_COUNTER_YEARLY = HabitCounter(FIRST_ID, YEARLY_PERIODICITY, FIRST_PERIOD)

    val HABIT_COUNTER_DAILY_ENTITY =
        HabitCounterEntity(FIRST_ID, DAILY_PERIODICITY_ENTITY, FIRST_PERIOD)
    val HABIT_COUNTER_WEEKLY_ENTITY =
        HabitCounterEntity(FIRST_ID, WEEKLY_PERIODICITY_ENTITY, FIRST_PERIOD)
    val HABIT_COUNTER_MONTHLY_ENTITY =
        HabitCounterEntity(FIRST_ID, MONTHLY_PERIODICITY_ENTITY, FIRST_PERIOD)
    val HABIT_COUNTER_YEARLY_ENTITY =
        HabitCounterEntity(FIRST_ID, YEARLY_PERIODICITY_ENTITY, FIRST_PERIOD)
}

fun Any.initMockKAnnotations() {
    MockKAnnotations.init(this, relaxUnitFun = true)
}
